Source: me, Paul Mulders <justinkb@gmail.com>
Upstream: no
Reason: Don't install useless systemd file (also avoids pkg-config dep).
Install GSettings schemas correctly and let our gsettings exlib compile them.

--- a/cmake/GLibProgramHandlers.cmake	2019-07-29 16:45:42.000000000 +0200
+++ b/cmake/GLibProgramHandlers.cmake	2019-09-02 14:01:21.106684463 +0200
@@ -1,20 +1,8 @@
 INCLUDE(CMakeParseArguments)
 find_package(GLIB2 QUIET COMPONENTS CODEGEN MKENUMS GENMARSHAL COMPILE_SCHEMAS COMPILE_RESOURCES GTESTER)
 
-option (GSETTINGS_LOCALINSTALL "Install GSettings Schemas locally instead of to the GLib prefix" ON)
-
-option (GSETTINGS_COMPILE "Compile GSettings Schemas after installation" ${GSETTINGS_LOCALINSTALL})
-
 macro(add_schema SCHEMA_NAME)
-    set(PKG_CONFIG_EXECUTABLE pkg-config)
-    # Have an option to not install the schema into where GLib is
     SET (GSETTINGS_DIR "${CMAKE_INSTALL_DATAROOTDIR}/glib-2.0/schemas/")
-    if (GSETTINGS_LOCALINSTALL)
-        SET (GSETTINGS_PREFIX "${CMAKE_INSTALL_PREFIX}")
-    else ()
-        execute_process (COMMAND ${PKG_CONFIG_EXECUTABLE} glib-2.0 --variable prefix OUTPUT_VARIABLE _glib_prefix OUTPUT_STRIP_TRAILING_WHITESPACE)
-        SET (GSETTINGS_PREFIX "${_glib_prefix}")
-    endif ()
 
     # Run the validator and error if it fails
     execute_process (COMMAND ${GLIB2_COMPILE_SCHEMAS_EXECUTABLE} --dry-run --schema-file=${CMAKE_CURRENT_SOURCE_DIR}/${SCHEMA_NAME} ERROR_VARIABLE _schemas_invalid OUTPUT_STRIP_TRAILING_WHITESPACE)
@@ -24,13 +12,8 @@
     endif (_schemas_invalid)
 
     # Actually install and recomple schemas
-    message (STATUS "GSettings schemas will be installed into ${GSETTINGS_PREFIX}/${GSETTINGS_DIR}")
-    install (FILES ${CMAKE_CURRENT_SOURCE_DIR}/${SCHEMA_NAME} DESTINATION ${GSETTINGS_PREFIX}/${GSETTINGS_DIR} COMPONENT ${ARGV1} OPTIONAL)
-
-    if (GSETTINGS_COMPILE)
-        install (CODE "message (STATUS \"Compiling GSettings schemas\")")
-        install (CODE "execute_process (COMMAND ${GLIB2_COMPILE_SCHEMAS_EXECUTABLE} ${GSETTINGS_PREFIX}/${GSETTINGS_DIR})")
-    endif ()
+    message (STATUS "GSettings schemas will be installed into ${GSETTINGS_DIR}")
+    install (FILES ${CMAKE_CURRENT_SOURCE_DIR}/${SCHEMA_NAME} DESTINATION ${GSETTINGS_DIR} COMPONENT ${ARGV1} OPTIONAL)
 endmacro()
 
 macro(add_glib_marshal outsources outincludes name prefix)
--- a/data/CMakeLists.txt	2019-07-29 16:45:42.000000000 +0200
+++ b/data/CMakeLists.txt	2019-09-02 14:14:22.126672262 +0200
@@ -1,20 +1,9 @@
-add_custom_target(data-files-module SOURCES org.appmenu.gtk-module.gschema.xml appmenu-gtk-module.service)
+add_custom_target(data-files-module SOURCES org.appmenu.gtk-module.gschema.xml)
 
 add_schema("org.appmenu.gtk-module.gschema.xml" "bin")
-pkg_check_modules(SYSTEMD "systemd")
-if (SYSTEMD_FOUND AND "${SYSTEMD_SERVICES_INSTALL_DIR}" STREQUAL "")
-    pkg_get_variable(SYSTEMD_SERVICES_INSTALL_DIR systemd systemduserunitdir)
-elseif (NOT SYSTEMD_FOUND AND SYSTEMD_SERVICES_INSTALL_DIR)
-    message (FATAL_ERROR "Variable SYSTEMD_SERVICES_INSTALL_DIR is\
-        defined, but we can't find systemd using pkg-config")
-endif()
 configure_file(appmenu-gtk2-parser.pc.in ${CMAKE_CURRENT_BINARY_DIR}/appmenu-gtk2-parser.pc @ONLY)
 configure_file(appmenu-gtk3-parser.pc.in ${CMAKE_CURRENT_BINARY_DIR}/appmenu-gtk3-parser.pc @ONLY)
-configure_file(appmenu-gtk-module.service.in ${CMAKE_CURRENT_BINARY_DIR}/appmenu-gtk-module.service @ONLY)
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/appmenu-gtk3-parser.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 if(GTK2_FOUND)
     install(FILES ${CMAKE_CURRENT_BINARY_DIR}/appmenu-gtk2-parser.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 endif()
-if (SYSTEMD_FOUND)
-    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/appmenu-gtk-module.service DESTINATION ${SYSTEMD_SERVICES_INSTALL_DIR})
-endif()
